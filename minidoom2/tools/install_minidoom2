#!/bin/bash

#
#   MiniDoom II install script
#   Author: kotzebuedog
#   Version: 1.0
#

if [ -d "/opt/system/Tools/PortMaster/" ]; then
  controlfolder="/opt/system/Tools/PortMaster"
elif [ -d "/opt/tools/PortMaster/" ]; then
  controlfolder="/opt/tools/PortMaster"
elif [ -d "$XDG_DATA_HOME/PortMaster/" ]; then
  controlfolder="$XDG_DATA_HOME/PortMaster"
else
  controlfolder="/roms/ports/PortMaster"
fi

source "$controlfolder/control.txt"

# Set GAMEDIR to the current directory and set logfile
export GAMEDIR="$PWD"
LOGFILE="$GAMEDIR/patchlog.txt"

# Redirect output and error to the log file
exec > >(tee -a "$LOGFILE") 2>&1
echo "GAMEDIR is set to: $GAMEDIR"

export PACKAGE_ZIP="miniDoom2 v3-1.zip"
export PACKAGE_DIR="miniDoom2 v3-1"

export PATH="$PATH:$GAMEDIR/tools:$controlfolder"
export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:$GAMEDIR/tools/libs"


# ----------------- BEGIN FUNCTIONS -----------------

check_banks(){

  # Check that the required sound banks are present
  required_banks=(
      "Ambs.bnk"
      "Events.bnk"
      "Init.bnk"
      "Music.bnk"
      "SFX.bnk"
  )

  # Check that the required sound banks are present
  for bank in "${required_banks[@]}"; do
    if [ ! -f "$GAMEDIR/$PACKAGE_DIR/sound/banks/Windows/$bank" ]; then
      echo "$GAMEDIR/$PACKAGE_DIR/sound/banks/Windows/$bank not found"
      exit 1
    fi
  done

  echo "All sound banks are present"

}

unpack_misc(){

  # Unpack misc data (misc.zip)
  unzip -o "$GAMEDIR/tools/misc.zip" 
  if [ ! $? -eq 0 ];then
    echo "Error while unpacking misc.zip"
    exit 1
  fi

  echo "misc.zip unpacked"

}

unpack_game(){

  # Unpack game (miniDoom2 v3-1.zip)
  if [ ! -f "$GAMEDIR/$PACKAGE_ZIP" ]; then
    echo "$GAMEDIR/$PACKAGE_ZIP not found"
    exit 1
  fi

  unzip -o "$GAMEDIR/$PACKAGE_ZIP" -d "$GAMEDIR/$PACKAGE_DIR"
  if [ ! $? -eq 0 ];then
    echo "Error while unpacking miniDoom2 v3-1.zip"
    exit 1
  fi
  
  echo "miniDoom2 v3-1.zip unpacked"

}

generate_audiogroup(){

  # Generate the audiogroup1.dat from the sound banks
  echo "Building a GameMaker audiogroup from the Wwise sound banks"

  check_banks

  # move Windows Wwise sound banks
  mv "$GAMEDIR/$PACKAGE_DIR/sound/banks/Windows/"*.bnk "$GAMEDIR/misc/txtp/banks/"

  mkdir -p "$GAMEDIR/assets"

  # Generate the audiogroup1.dat in the assets folder
  echo "Generate the audiogroup1.dat with wwise2audiogroup.py"
  python3 "$GAMEDIR/tools/wwise2audiogroup.py" "$GAMEDIR/misc/bank-events.json"

  if [ ! $? -eq 0 ];then
    echo "The build of audiogroup1.dat has failed"
    exit 1
  else
    echo "audiogroup1.dat build success !"
  fi

  # pack the audiogroup1.dat into the APK
  zip -0 -r "$GAMEDIR/minidoom2.apk" "assets"
  if [ ! $? -eq 0 ];then
    echo "Error while packing the assets into the apk"
    exit 1
  else
    echo "Assets have been packed into the apk"
    rm -rf "$GAMEDIR/assets"
  fi

}

patch_data(){
    
  # Patch the data.win
  echo "Patching data.win (Rewriting SFX play function calls)"
  xdelta3 -d -s "$GAMEDIR/$PACKAGE_DIR/data.win" "$GAMEDIR/misc/patch-sfx.vcdiff" "$GAMEDIR/gamedata/game.droid"
  if [ ! $? -eq 0 ];then
    echo "Error while patching data.win"
    exit 1
  fi
  echo "Patching done"

}

default_config(){

  # Set default config
  cp "$GAMEDIR/default-configs.ini" "$GAMEDIR/gamedata/configs.ini"

}

cleanup(){

  # We don't need the misc data and the game package anymore
  rm -rf "$GAMEDIR/misc"
  rm -rf "$GAMEDIR/$PACKAGE_DIR"
  rm -f "$GAMEDIR/$PACKAGE_ZIP"

}

# ----------------- END FUNCTIONS -----------------

# Start the install

unpack_misc

unpack_game

generate_audiogroup

patch_data

default_config

cleanup